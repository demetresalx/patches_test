# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths-ignore: 
      - '**.yl'
    branches:
      - main
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs
    Patch-Linux:
     #tries to apply the patch to each version
       runs-on: ubuntu-latest
       defaults:
         run:
           working-directory: .
       #strategy matrix to run jobs in parallel for each version
       strategy:
         matrix:
           versions: [ v5.7, v5.8, v5.9 ]
       
       env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
             LINUX_VERSION: ${{ matrix.versions }}
       
       steps:
         - uses: actions/checkout@v2
         - name: install necessary packages
           run: | 
             sudo apt-get -y update
             sudo apt-get install -y libelf-dev
         - name: Clone linux
           run: |
             cd $LINUX_VERSION
             git clone https://github.com/torvalds/linux -b $LINUX_VERSION --depth 1 linux-$LINUX_VERSION
             cd linux-$LINUX_VERSION
         
         - name: Apply patches
           id: apply-patch
           working-directory: linux-$LINUX_VERSION
           run: |
             for i in ../*.patch
             do
                 git config user.name "CI Bot"
                 git config user.email "ci-bot@nubis-pc.eu"
                 git am $i
                 echo ::set-output name=patch_exit_code::$?
             done
           
           #build the linux kernel for this version. will run only if patching has succeeded
         - name: Build Kernel
           id: build-kernel
           if: steps.apply-patch.outputs.patch_exit_code == 0
           working-directory: linux-$LINUX_VERSION
           run: |
             wget https://gist.githubusercontent.com/ananos/4749c77111a560503bd9725409d82800/raw/3e65dec157a7a19d965675054ef85ce8bc06c74b/basic%2520kernel%2520config -O arch/x86/configs/kvmm.config
             touch .config
             make kvmm.config
             make -j$(nproc)
             echo ::set-output name=build_exit_code::$?
           
         - name: Create Patching error message
           if: steps.apply-patch.outputs.patch_exit_code == 1
           run: |
             export MYMSG="PATCHING FAILED FOR VERSION $LINUX_VERSION "
             echo "::set-env name=MYMSG::$MYMSG"
         
         - name: Create Building error message
           if: steps.build-kernel.outputs.build_exit_code == 1
           run: |
             export MYMSG="BUILDING FAILED FOR VERSION $LINUX_VERSION "
             echo "::set-env name=MYMSG::$MYMSG"
           
         - name: Create Issue
           if: steps.apply-patch.outputs.patch_exit_code == 1 || steps.build-kernel.outputs.build_exit_code == 1
           uses: JasonEtco/create-an-issue@v2
           
             

